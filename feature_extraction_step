Figures!!

For any topological space X with a finite number of path components, β0(X) is the number of
path components.

The first Betti number β1 of the letter “B” above is two, and for the letter “O” it is one. In this
case, it provides a formalization of the count of the number of loops present in the space.


The integer k specifies a dimension of a feature (zero-dimensional
for a cluster, one-dimensional for a loop, etc.), and an interval represents
a feature which is “born” at the value of a parameter (the persistence pa-
rameter) given by the left hand endpoint of the interval, and which “dies”
at the value given by the right hand endpoint. These barcodes have been
demonstrated to identify structure in spaces of image

To coordinatize the barcode space...
In machine learning terminology, these coordinates are called
features
This allows us to characterize the barcodes generated by each data
point as a compact feature vector.

We selected a set of four features from the invariants discussed in this
paper:
	The Ring of Algebraic Functions on Persistence Bar Codes
	Aaron Adcock
	Erik Carlsson
	Gunnar Carlsson
	April 3, 2013


References:
BARCODES: THE PERSISTENT TOPOLOGY OF DATA
ROBERT GHRIST
https://www.math.upenn.edu/~ghrist/preprints/barcodes.pdf

Persistent homology for random fields and
complexes
https://projecteuclid.org/download/pdfview_1/euclid.imsc/1288099016

A roadmap for the computation of persistent homology
https://link.springer.com/article/10.1140/epjds/s13688-017-0109-5

Dionysus is a C++ library for computing persistent homology.
https://www.mrzv.org/software/dionysus/
https://pypi.org/project/dionysus/

Afra Zomorodian Computational Topology Dartmouth College, November 3,
2009.
http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.220.20&rep=rep1&type=pdf

Gunnar Carlsson Topology and Data Department of Mathematics, Stanford
University Stanford, California 94305 October 2, 2008
http://fodavadev.gatech.edu/sites/default/files/FODAVA-08-02.pdf

E.g.:
	Betti 0
	(8.0, M)
	(12.0, 14.0)

	Betti 1
	(14.0, M)
	(19.0, M)

Bar code with n=2 intervals:
(x1, y1, x2, y2, ...)
x_i = birth
y_i = death

Select 4 features:

	sum_i { x_i * (y_i - x_i) }

	sum_i { (y_max - y_i) * (y_i - x_i) }

	sum_i { x_i^2 * (y_i - x_i)^4 }

	sum_i { (y_max - y_i)^2 * (y_i - x_i)^4 }

E.g.:

x1, y1, x2, y2 = 8, M, 12, 14
feature1 = 8 * (M - 8) + 12 * (14 - 12) = 184

Each image gives us a vector u of:
4 sweeps * (2 barcodes * 4 features) = 32 features

Result: matrix of size (N=1000 x 32)

SVM
* with RBF: exp(-gamma |u - v|^2) ... Gaussian kernel with gamma=8
* polynomial kernel (gamma (u * v) + a)^d with d = 3, gamma=2, a=2

Increase the size to N = 10000
Partition data set into 100 subsets of size 100 and use CV on each
100-fold CV?
